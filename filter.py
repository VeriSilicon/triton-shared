problems = ["addptr_scalar_loopback.mlir",
"convert_1d_elemwise_arith_binary.mlir",
"convert_1d_elemwise_arith_ternary.mlir",
"convert_1d_elemwise_arith_unary.mlir",
"convert_2d_elemwise_arith_binary.mlir",
"convert_2d_elemwise_arith_ternary.mlir",
"convert_2d_elemwise_arith_unary.mlir",
"convert_addi_reduce.mlir",
"convert_argmin_argmax.mlir",
"convert_argmin_argmax_2d.mlir",
"convert_minmax.mlir",
"convert_minmax_fp_reduce.mlir",
"convert_minmax_reduce.mlir",
"convert_splat_float.mlir",
"cumsum.mlir",
"kernel-02-fused-softmax.mlir",
"kernel-05-layer-norm-dwdb.mlir",
"kernel-05-layer-norm-fwd.mlir",
"reducemax_32_256_bf16.mlir",
"reducesum_512_256_bf16_axis0.mlir",
"reducesum_512_256_bf16_axis1.mlir",
"reducesum_512_256_f32_axis0.mlir",
"reducesum_512_256_f32_axis1.mlir",
"reducesum_middle_dim.mlir",
"reducesum_scalar.mlir",
"wraparound_stacked.mlir",
"wraparound_unsupported_add_offset.mlir"]

all = [
"addptr_2d_example.mlir",
"addptr_add_value.mlir",
"addptr_dim1.mlir",
"addptr_for_accumulation.mlir",
"addptr_for_expand_ptr.mlir",
"addptr_for_more_init_args.mlir",
"addptr_for_used_after_update.mlir",
"addptr_for_used_before_update.mlir",
"addptr_loopback.mlir",
"addptr_mul_const_const.mlir",
"addptr_mul_value_const.mlir",
"addptr_nested.mlir",
"addptr_reshape_broadcast.mlir",
"addptr_scalar_broadcast.mlir",
"addptr_scalar_for.mlir",
"addptr_scalar_for_2d.mlir",
"addptr_scalar_loopback.mlir",
"addptr_scalar_nested.mlir",
"addptr_scalar_splat.mlir",
"addptr_scalar_splat_2d.mlir",
"arith_not_ptr_arith.mlir",
"bitcast.mlir",
"block_ptr_advance.mlir",
"convert_1d_elemwise_arith_binary.mlir",
"convert_1d_elemwise_arith_ternary.mlir",
"convert_1d_elemwise_arith_unary.mlir",
"convert_2d_elemwise_arith_binary.mlir",
"convert_2d_elemwise_arith_ternary.mlir",
"convert_2d_elemwise_arith_unary.mlir",
"convert_addi_reduce.mlir",
"convert_argmin_argmax.mlir",
"convert_argmin_argmax_2d.mlir",
"convert_extern_elementwise.mlir",
"convert_minmax.mlir",
"convert_minmax_fp_reduce.mlir",
"convert_minmax_reduce.mlir",
"convert_splat_float.mlir",
"convert_tensor_reshape.mlir",
"cumsum.mlir",
"dot.mlir",
"get_num_programs.mlir",
"kernel-01-vector-add.mlir",
"kernel-02-fused-softmax.mlir",
"kernel-03-matrix-multiplication.mlir",
"kernel-05-layer-norm-dwdb.mlir",
"kernel-05-layer-norm-fwd.mlir",
"masked_ldst_1d.mlir",
"masked_ldst_2d.mlir",
"masked_ldst_sitofp_other.mlir",
"reducemax_32_256_bf16.mlir",
"reducesum_512_256_bf16_axis0.mlir",
"reducesum_512_256_bf16_axis1.mlir",
"reducesum_512_256_f32_axis0.mlir",
"reducesum_512_256_f32_axis1.mlir",
"reducesum_middle_dim.mlir",
"reducesum_scalar.mlir",
"triton_assert.mlir",
"unsupported_extern_elementwise.mlir",
"use_dot_opc.mlir",
"use_end_chain.mlir",
"use_mid_chain.mlir",
"wraparound_side_by_side.mlir",
"wraparound_stacked.mlir",
"wraparound_unsupported_add_offset.mlir",
]


for test in all:
    if test not in problems:
        print(test)