#loc = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":11:0)
module {
  tt.func public @reduce_kernel_2d_0d(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":11:0)) attributes {noinline = false} {
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.addptr %arg0, %0 : !tt.ptr<f32, 1>, i32 loc(#loc3)
    %2 = scf.for %arg1 = %c0_i32 to %c8_i32 step %c1_i32 iter_args(%arg2 = %1) -> (!tt.ptr<f32, 1>)  : i32 {
      %3 = arith.sitofp %arg1 : i32 to f32 loc(#loc5)
      %4 = scf.for %arg3 = %c0_i32 to %c2_i32 step %c1_i32 iter_args(%arg4 = %arg2) -> (!tt.ptr<f32, 1>)  : i32 {
        tt.store %arg4, %3 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc5)
        %5 = tt.addptr %arg4, %c1_i32 : !tt.ptr<f32, 1>, i32 loc(#loc7)
        scf.yield %5 : !tt.ptr<f32, 1> loc(#loc8)
      } loc(#loc6)
      scf.yield %4 : !tt.ptr<f32, 1> loc(#loc9)
    } loc(#loc4)
    tt.return loc(#loc10)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":15:25)
#loc3 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":16:28)
#loc4 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":18:22)
#loc5 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":21:31)
#loc6 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":19:26)
#loc7 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":22:24)
#loc8 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":22:12)
#loc9 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":19:8)
#loc10 = loc("/home/nhat/github/triton_shared/python/examples/test_scalar_store.py":18:4)
